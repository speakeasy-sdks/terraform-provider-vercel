// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateEdgeConfigRequestBody struct {
	Slug string `json:"slug"`
}

func (o *UpdateEdgeConfigRequestBody) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

type UpdateEdgeConfigRequest struct {
	RequestBody  *UpdateEdgeConfigRequestBody `request:"mediaType=application/json"`
	EdgeConfigID string                       `pathParam:"style=simple,explode=false,name=edgeConfigId"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

func (o *UpdateEdgeConfigRequest) GetRequestBody() *UpdateEdgeConfigRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *UpdateEdgeConfigRequest) GetEdgeConfigID() string {
	if o == nil {
		return ""
	}
	return o.EdgeConfigID
}

func (o *UpdateEdgeConfigRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

// UpdateEdgeConfigTransfer - Keeps track of the current state of the Edge Config while it gets transferred.
type UpdateEdgeConfigTransfer struct {
	DoneAt        *int64 `json:"doneAt"`
	FromAccountID string `json:"fromAccountId"`
	StartedAt     int64  `json:"startedAt"`
}

func (o *UpdateEdgeConfigTransfer) GetDoneAt() *int64 {
	if o == nil {
		return nil
	}
	return o.DoneAt
}

func (o *UpdateEdgeConfigTransfer) GetFromAccountID() string {
	if o == nil {
		return ""
	}
	return o.FromAccountID
}

func (o *UpdateEdgeConfigTransfer) GetStartedAt() int64 {
	if o == nil {
		return 0
	}
	return o.StartedAt
}

// UpdateEdgeConfigResponseBody - An Edge Config
type UpdateEdgeConfigResponseBody struct {
	CreatedAt   *int64  `json:"createdAt,omitempty"`
	Digest      *string `json:"digest,omitempty"`
	ID          *string `json:"id,omitempty"`
	ItemCount   int64   `json:"itemCount"`
	OwnerID     *string `json:"ownerId,omitempty"`
	SizeInBytes int64   `json:"sizeInBytes"`
	// Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
	Slug *string `json:"slug,omitempty"`
	// Keeps track of the current state of the Edge Config while it gets transferred.
	Transfer  *UpdateEdgeConfigTransfer `json:"transfer,omitempty"`
	UpdatedAt *int64                    `json:"updatedAt,omitempty"`
}

func (o *UpdateEdgeConfigResponseBody) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *UpdateEdgeConfigResponseBody) GetDigest() *string {
	if o == nil {
		return nil
	}
	return o.Digest
}

func (o *UpdateEdgeConfigResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *UpdateEdgeConfigResponseBody) GetItemCount() int64 {
	if o == nil {
		return 0
	}
	return o.ItemCount
}

func (o *UpdateEdgeConfigResponseBody) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *UpdateEdgeConfigResponseBody) GetSizeInBytes() int64 {
	if o == nil {
		return 0
	}
	return o.SizeInBytes
}

func (o *UpdateEdgeConfigResponseBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateEdgeConfigResponseBody) GetTransfer() *UpdateEdgeConfigTransfer {
	if o == nil {
		return nil
	}
	return o.Transfer
}

func (o *UpdateEdgeConfigResponseBody) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type UpdateEdgeConfigResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Object      *UpdateEdgeConfigResponseBody
}

func (o *UpdateEdgeConfigResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateEdgeConfigResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateEdgeConfigResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateEdgeConfigResponse) GetObject() *UpdateEdgeConfigResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
