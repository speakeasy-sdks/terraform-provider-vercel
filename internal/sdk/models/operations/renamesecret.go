// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/vercel/terraform-provider-terraform/internal/sdk/internal/utils"
	"net/http"
	"time"
)

type RenameSecretRequestBody struct {
	// The name of the new secret.
	Name string `json:"name"`
}

func (o *RenameSecretRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type RenameSecretRequest struct {
	// The name of the secret.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug        *string                  `queryParam:"style=form,explode=true,name=slug"`
	RequestBody *RenameSecretRequestBody `request:"mediaType=application/json"`
}

func (o *RenameSecretRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RenameSecretRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *RenameSecretRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *RenameSecretRequest) GetRequestBody() *RenameSecretRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type RenameSecretResponseBody struct {
	UID     string    `json:"uid"`
	Name    string    `json:"name"`
	Created time.Time `json:"created"`
	OldName string    `json:"oldName"`
}

func (r RenameSecretResponseBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RenameSecretResponseBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RenameSecretResponseBody) GetUID() string {
	if o == nil {
		return ""
	}
	return o.UID
}

func (o *RenameSecretResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RenameSecretResponseBody) GetCreated() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Created
}

func (o *RenameSecretResponseBody) GetOldName() string {
	if o == nil {
		return ""
	}
	return o.OldName
}

type RenameSecretResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Object      *RenameSecretResponseBody
}

func (o *RenameSecretResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RenameSecretResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RenameSecretResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RenameSecretResponse) GetObject() *RenameSecretResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
