// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetEdgeConfigsRequest struct {
	// The Team identifier to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The Team slug to perform the request on behalf of.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *GetEdgeConfigsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetEdgeConfigsRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

// Transfer - Keeps track of the current state of the Edge Config while it gets transferred.
type Transfer struct {
	FromAccountID string   `json:"fromAccountId"`
	StartedAt     float64  `json:"startedAt"`
	DoneAt        *float64 `json:"doneAt"`
}

func (o *Transfer) GetFromAccountID() string {
	if o == nil {
		return ""
	}
	return o.FromAccountID
}

func (o *Transfer) GetStartedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.StartedAt
}

func (o *Transfer) GetDoneAt() *float64 {
	if o == nil {
		return nil
	}
	return o.DoneAt
}

type Schema struct {
}

// GetEdgeConfigsResponseBody - List of all edge configs.
type GetEdgeConfigsResponseBody struct {
	ID        *string  `json:"id,omitempty"`
	CreatedAt *float64 `json:"createdAt,omitempty"`
	OwnerID   *string  `json:"ownerId,omitempty"`
	// Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
	Slug      *string  `json:"slug,omitempty"`
	UpdatedAt *float64 `json:"updatedAt,omitempty"`
	Digest    *string  `json:"digest,omitempty"`
	// Keeps track of the current state of the Edge Config while it gets transferred.
	Transfer    *Transfer `json:"transfer,omitempty"`
	Schema      *Schema   `json:"schema,omitempty"`
	SizeInBytes float64   `json:"sizeInBytes"`
	ItemCount   float64   `json:"itemCount"`
}

func (o *GetEdgeConfigsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetEdgeConfigsResponseBody) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetEdgeConfigsResponseBody) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *GetEdgeConfigsResponseBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *GetEdgeConfigsResponseBody) GetUpdatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetEdgeConfigsResponseBody) GetDigest() *string {
	if o == nil {
		return nil
	}
	return o.Digest
}

func (o *GetEdgeConfigsResponseBody) GetTransfer() *Transfer {
	if o == nil {
		return nil
	}
	return o.Transfer
}

func (o *GetEdgeConfigsResponseBody) GetSchema() *Schema {
	if o == nil {
		return nil
	}
	return o.Schema
}

func (o *GetEdgeConfigsResponseBody) GetSizeInBytes() float64 {
	if o == nil {
		return 0.0
	}
	return o.SizeInBytes
}

func (o *GetEdgeConfigsResponseBody) GetItemCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.ItemCount
}

type GetEdgeConfigsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List of all edge configs.
	Object *GetEdgeConfigsResponseBody
}

func (o *GetEdgeConfigsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetEdgeConfigsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetEdgeConfigsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetEdgeConfigsResponse) GetObject() *GetEdgeConfigsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
