// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateEdgeConfigRequest struct {
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

func (o *CreateEdgeConfigRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

// Transfer - Keeps track of the current state of the Edge Config while it gets transferred.
type Transfer struct {
	DoneAt        *int64 `json:"doneAt"`
	FromAccountID string `json:"fromAccountId"`
	StartedAt     int64  `json:"startedAt"`
}

func (o *Transfer) GetDoneAt() *int64 {
	if o == nil {
		return nil
	}
	return o.DoneAt
}

func (o *Transfer) GetFromAccountID() string {
	if o == nil {
		return ""
	}
	return o.FromAccountID
}

func (o *Transfer) GetStartedAt() int64 {
	if o == nil {
		return 0
	}
	return o.StartedAt
}

// CreateEdgeConfigResponseBody - An Edge Config
type CreateEdgeConfigResponseBody struct {
	CreatedAt   *int64  `json:"createdAt,omitempty"`
	Digest      *string `json:"digest,omitempty"`
	ID          *string `json:"id,omitempty"`
	ItemCount   int64   `json:"itemCount"`
	OwnerID     *string `json:"ownerId,omitempty"`
	SizeInBytes int64   `json:"sizeInBytes"`
	// Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
	Slug *string `json:"slug,omitempty"`
	// Keeps track of the current state of the Edge Config while it gets transferred.
	Transfer  *Transfer `json:"transfer,omitempty"`
	UpdatedAt *int64    `json:"updatedAt,omitempty"`
}

func (o *CreateEdgeConfigResponseBody) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CreateEdgeConfigResponseBody) GetDigest() *string {
	if o == nil {
		return nil
	}
	return o.Digest
}

func (o *CreateEdgeConfigResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateEdgeConfigResponseBody) GetItemCount() int64 {
	if o == nil {
		return 0
	}
	return o.ItemCount
}

func (o *CreateEdgeConfigResponseBody) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *CreateEdgeConfigResponseBody) GetSizeInBytes() int64 {
	if o == nil {
		return 0
	}
	return o.SizeInBytes
}

func (o *CreateEdgeConfigResponseBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *CreateEdgeConfigResponseBody) GetTransfer() *Transfer {
	if o == nil {
		return nil
	}
	return o.Transfer
}

func (o *CreateEdgeConfigResponseBody) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type CreateEdgeConfigResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Object      *CreateEdgeConfigResponseBody
}

func (o *CreateEdgeConfigResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateEdgeConfigResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateEdgeConfigResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateEdgeConfigResponse) GetObject() *CreateEdgeConfigResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
