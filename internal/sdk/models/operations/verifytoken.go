// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type VerifyTokenRequest struct {
	// Email to verify the login.
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// The SAML Profile ID, when connecting a SAML Profile to a Team member for the first time.
	SsoUserID *string `queryParam:"style=form,explode=true,name=ssoUserId"`
	// The token returned when the login was requested.
	Token string `queryParam:"style=form,explode=true,name=token"`
	// The desired name for the token. It will be displayed on the user account details.
	TokenName *string `queryParam:"style=form,explode=true,name=tokenName"`
}

func (o *VerifyTokenRequest) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *VerifyTokenRequest) GetSsoUserID() *string {
	if o == nil {
		return nil
	}
	return o.SsoUserID
}

func (o *VerifyTokenRequest) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *VerifyTokenRequest) GetTokenName() *string {
	if o == nil {
		return nil
	}
	return o.TokenName
}

// VerifyTokenResponseBody - The verification was successful.
type VerifyTokenResponseBody struct {
	// Email address of the authenticated user.
	Email string `json:"email"`
	// When completing SAML Single Sign-On authentication, this will be the ID of the Team that was authenticated for.
	TeamID *string `json:"teamId,omitempty"`
	// The user authentication token that can be used to perform API requests.
	Token string `json:"token"`
}

func (o *VerifyTokenResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *VerifyTokenResponseBody) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *VerifyTokenResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type VerifyTokenResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The verification was successful.
	Object *VerifyTokenResponseBody
}

func (o *VerifyTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *VerifyTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *VerifyTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *VerifyTokenResponse) GetObject() *VerifyTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
