// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"vercel/internal/sdk/pkg/utils"
)

type EdgeConfigItemValueType string

const (
	EdgeConfigItemValueTypeStr     EdgeConfigItemValueType = "str"
	EdgeConfigItemValueTypeInteger EdgeConfigItemValueType = "integer"
	EdgeConfigItemValueTypeBoolean EdgeConfigItemValueType = "boolean"
)

type EdgeConfigItemValue struct {
	Str     *string
	Integer *int64
	Boolean *bool

	Type EdgeConfigItemValueType
}

func CreateEdgeConfigItemValueStr(str string) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeStr

	return EdgeConfigItemValue{
		Str:  &str,
		Type: typ,
	}
}

func CreateEdgeConfigItemValueInteger(integer int64) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeInteger

	return EdgeConfigItemValue{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateEdgeConfigItemValueBoolean(boolean bool) EdgeConfigItemValue {
	typ := EdgeConfigItemValueTypeBoolean

	return EdgeConfigItemValue{
		Boolean: &boolean,
		Type:    typ,
	}
}

func (u *EdgeConfigItemValue) UnmarshalJSON(data []byte) error {

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = EdgeConfigItemValueTypeStr
		return nil
	}

	integer := new(int64)
	if err := utils.UnmarshalJSON(data, &integer, "", true, true); err == nil {
		u.Integer = integer
		u.Type = EdgeConfigItemValueTypeInteger
		return nil
	}

	boolean := new(bool)
	if err := utils.UnmarshalJSON(data, &boolean, "", true, true); err == nil {
		u.Boolean = boolean
		u.Type = EdgeConfigItemValueTypeBoolean
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u EdgeConfigItemValue) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Integer != nil {
		return utils.MarshalJSON(u.Integer, "", true)
	}

	if u.Boolean != nil {
		return utils.MarshalJSON(u.Boolean, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
