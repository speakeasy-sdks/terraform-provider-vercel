// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"net/http"
)

// RequestDeleteRequestBodyReasons - An object describing the reason why the User account is being deleted.
type RequestDeleteRequestBodyReasons struct {
	// Description of the reason why the User account is being deleted.
	Description string `json:"description"`
	// Idenitifier slug of the reason why the User account is being deleted.
	Slug string `json:"slug"`

	AdditionalProperties interface{} `json:"-"`
}
type _RequestDeleteRequestBodyReasons RequestDeleteRequestBodyReasons

func (c *RequestDeleteRequestBodyReasons) UnmarshalJSON(bs []byte) error {
	data := _RequestDeleteRequestBodyReasons{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = RequestDeleteRequestBodyReasons(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "description")
	delete(additionalFields, "slug")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c RequestDeleteRequestBodyReasons) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_RequestDeleteRequestBodyReasons(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

type RequestDeleteRequestBody struct {
	// Optional array of objects that describe the reason why the User account is being deleted.
	Reasons []RequestDeleteRequestBodyReasons `json:"reasons,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _RequestDeleteRequestBody RequestDeleteRequestBody

func (c *RequestDeleteRequestBody) UnmarshalJSON(bs []byte) error {
	data := _RequestDeleteRequestBody{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = RequestDeleteRequestBody(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "reasons")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c RequestDeleteRequestBody) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_RequestDeleteRequestBody(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

// RequestDelete202ApplicationJSON - Response indicating that the User deletion process has been initiated, and a confirmation email has been sent.
type RequestDelete202ApplicationJSON struct {
	// Email address of the User who has initiated deletion.
	Email string `json:"email"`
	// Unique identifier of the User who has initiated deletion.
	ID string `json:"id"`
	// User deletion progress status.
	Message string `json:"message"`
}

type RequestDeleteResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Response indicating that the User deletion process has been initiated, and a confirmation email has been sent.
	RequestDelete202ApplicationJSONObject *RequestDelete202ApplicationJSON
}
