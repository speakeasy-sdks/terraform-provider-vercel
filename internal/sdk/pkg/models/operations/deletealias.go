// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteAliasRequest struct {
	// The ID or alias that will be removed
	AliasID string `pathParam:"style=simple,explode=false,name=aliasId"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

type DeleteAlias200ApplicationJSONStatus string

const (
	DeleteAlias200ApplicationJSONStatusSuccess DeleteAlias200ApplicationJSONStatus = "SUCCESS"
)

func (e DeleteAlias200ApplicationJSONStatus) ToPointer() *DeleteAlias200ApplicationJSONStatus {
	return &e
}

func (e *DeleteAlias200ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		*e = DeleteAlias200ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAlias200ApplicationJSONStatus: %v", v)
	}
}

// DeleteAlias200ApplicationJSON - The alias was successfully removed
type DeleteAlias200ApplicationJSON struct {
	Status DeleteAlias200ApplicationJSONStatus `json:"status"`
}

type DeleteAliasResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The alias was successfully removed
	DeleteAlias200ApplicationJSONObject *DeleteAlias200ApplicationJSON
}
