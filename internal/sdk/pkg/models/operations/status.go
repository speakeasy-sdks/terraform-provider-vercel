// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type StatusRequest struct {
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

type Status200ApplicationJSONStatus string

const (
	Status200ApplicationJSONStatusDisabled  Status200ApplicationJSONStatus = "disabled"
	Status200ApplicationJSONStatusEnabled   Status200ApplicationJSONStatus = "enabled"
	Status200ApplicationJSONStatusOverLimit Status200ApplicationJSONStatus = "over_limit"
	Status200ApplicationJSONStatusPaused    Status200ApplicationJSONStatus = "paused"
)

func (e Status200ApplicationJSONStatus) ToPointer() *Status200ApplicationJSONStatus {
	return &e
}

func (e *Status200ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		fallthrough
	case "over_limit":
		fallthrough
	case "paused":
		*e = Status200ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status200ApplicationJSONStatus: %v", v)
	}
}

type Status200ApplicationJSON struct {
	Status Status200ApplicationJSONStatus `json:"status"`
}

type StatusResponse struct {
	ContentType                    string
	StatusCode                     int
	RawResponse                    *http.Response
	Status200ApplicationJSONObject *Status200ApplicationJSON
}
