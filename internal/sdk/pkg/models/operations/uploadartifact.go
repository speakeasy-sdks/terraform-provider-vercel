// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UploadArtifactSecurity struct {
	BearerToken string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type UploadArtifactRequest struct {
	// The artifact size in bytes
	ContentLength int64  `header:"style=simple,explode=false,name=Content-Length"`
	RequestBody   []byte `request:"mediaType=application/octet-stream"`
	// The artifact hash
	Hash string `pathParam:"style=simple,explode=false,name=hash"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The continuous integration or delivery environment where this artifact was generated.
	XArtifactClientCi *string `header:"style=simple,explode=false,name=x-artifact-client-ci"`
	// 1 if the client is an interactive shell. Otherwise 0
	XArtifactClientInteractive *int64 `header:"style=simple,explode=false,name=x-artifact-client-interactive"`
	// The time taken to generate the uploaded artifact in milliseconds.
	XArtifactDuration *int64 `header:"style=simple,explode=false,name=x-artifact-duration"`
	// The base64 encoded tag for this artifact. The value is sent back to clients when the artifact is downloaded as the header `x-artifact-tag`
	XArtifactTag *string `header:"style=simple,explode=false,name=x-artifact-tag"`
}

// UploadArtifact202ApplicationJSON - File successfully uploaded
type UploadArtifact202ApplicationJSON struct {
	// Array of URLs where the artifact was updated
	Urls []string `json:"urls"`
}

type UploadArtifactResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// File successfully uploaded
	UploadArtifact202ApplicationJSONObject *UploadArtifact202ApplicationJSON
}
