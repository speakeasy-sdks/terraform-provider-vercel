// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UploadArtifactRequest struct {
	// The artifact size in bytes
	ContentLength int64  `header:"style=simple,explode=false,name=Content-Length"`
	RequestBody   []byte `request:"mediaType=application/octet-stream"`
	// The artifact hash
	Hash string `pathParam:"style=simple,explode=false,name=hash"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// The continuous integration or delivery environment where this artifact was generated.
	XArtifactClientCi *string `header:"style=simple,explode=false,name=x-artifact-client-ci"`
	// 1 if the client is an interactive shell. Otherwise 0
	XArtifactClientInteractive *int64 `header:"style=simple,explode=false,name=x-artifact-client-interactive"`
	// The time taken to generate the uploaded artifact in milliseconds.
	XArtifactDuration *int64 `header:"style=simple,explode=false,name=x-artifact-duration"`
	// The base64 encoded tag for this artifact. The value is sent back to clients when the artifact is downloaded as the header `x-artifact-tag`
	XArtifactTag *string `header:"style=simple,explode=false,name=x-artifact-tag"`
}

func (o *UploadArtifactRequest) GetContentLength() int64 {
	if o == nil {
		return 0
	}
	return o.ContentLength
}

func (o *UploadArtifactRequest) GetRequestBody() []byte {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *UploadArtifactRequest) GetHash() string {
	if o == nil {
		return ""
	}
	return o.Hash
}

func (o *UploadArtifactRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *UploadArtifactRequest) GetXArtifactClientCi() *string {
	if o == nil {
		return nil
	}
	return o.XArtifactClientCi
}

func (o *UploadArtifactRequest) GetXArtifactClientInteractive() *int64 {
	if o == nil {
		return nil
	}
	return o.XArtifactClientInteractive
}

func (o *UploadArtifactRequest) GetXArtifactDuration() *int64 {
	if o == nil {
		return nil
	}
	return o.XArtifactDuration
}

func (o *UploadArtifactRequest) GetXArtifactTag() *string {
	if o == nil {
		return nil
	}
	return o.XArtifactTag
}

// UploadArtifact202ApplicationJSON - File successfully uploaded
type UploadArtifact202ApplicationJSON struct {
	// Array of URLs where the artifact was updated
	Urls []string `json:"urls"`
}

func (o *UploadArtifact202ApplicationJSON) GetUrls() []string {
	if o == nil {
		return []string{}
	}
	return o.Urls
}

type UploadArtifactResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// File successfully uploaded
	UploadArtifact202ApplicationJSONObject *UploadArtifact202ApplicationJSON
}

func (o *UploadArtifactResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UploadArtifactResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UploadArtifactResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UploadArtifactResponse) GetUploadArtifact202ApplicationJSONObject() *UploadArtifact202ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.UploadArtifact202ApplicationJSONObject
}
