// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
	"vercel/internal/sdk/pkg/models/shared"
)

type GetSecretsSecurity struct {
	BearerToken string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type GetSecretsRequest struct {
	// Filter out secrets based on comma separated secret ids.
	ID *string `queryParam:"style=form,explode=true,name=id"`
	// Filter out secrets that belong to a project.
	ProjectID *string `queryParam:"style=form,explode=true,name=projectId"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

// GetSecrets200ApplicationJSONSecrets - Data representing a secret.
type GetSecrets200ApplicationJSONSecrets struct {
	// The date when the secret was created.
	Created time.Time `json:"created"`
	// Timestamp for when the secret was created.
	CreatedAt *int64 `json:"createdAt,omitempty"`
	// Indicates whether the secret value can be decrypted after it has been created.
	Decryptable *bool `json:"decryptable,omitempty"`
	// The name of the secret.
	Name string `json:"name"`
	// The unique identifier of the project which the secret belongs to.
	ProjectID *string `json:"projectId,omitempty"`
	// The unique identifier of the team the secret was created for.
	TeamID *string `json:"teamId,omitempty"`
	// The unique identifier of the secret.
	UID string `json:"uid"`
	// The unique identifier of the user who created the secret.
	UserID *string `json:"userId,omitempty"`
	// The value of the secret.
	Value *string `json:"value,omitempty"`
}

// GetSecrets200ApplicationJSON - Successful response retrieving a list of secrets.
type GetSecrets200ApplicationJSON struct {
	// This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
	Pagination shared.Pagination                     `json:"pagination"`
	Secrets    []GetSecrets200ApplicationJSONSecrets `json:"secrets"`
}

type GetSecretsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response retrieving a list of secrets.
	GetSecrets200ApplicationJSONObject *GetSecrets200ApplicationJSON
}
