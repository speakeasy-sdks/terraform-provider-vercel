// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetCertByIDRequest struct {
	// The cert id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

func (o *GetCertByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetCertByIDRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

type GetCertByIDResponseBody struct {
	AutoRenew bool     `json:"autoRenew"`
	Cns       []string `json:"cns"`
	CreatedAt int64    `json:"createdAt"`
	ExpiresAt int64    `json:"expiresAt"`
	ID        string   `json:"id"`
}

func (o *GetCertByIDResponseBody) GetAutoRenew() bool {
	if o == nil {
		return false
	}
	return o.AutoRenew
}

func (o *GetCertByIDResponseBody) GetCns() []string {
	if o == nil {
		return []string{}
	}
	return o.Cns
}

func (o *GetCertByIDResponseBody) GetCreatedAt() int64 {
	if o == nil {
		return 0
	}
	return o.CreatedAt
}

func (o *GetCertByIDResponseBody) GetExpiresAt() int64 {
	if o == nil {
		return 0
	}
	return o.ExpiresAt
}

func (o *GetCertByIDResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GetCertByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Object      *GetCertByIDResponseBody
}

func (o *GetCertByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetCertByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetCertByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetCertByIDResponse) GetObject() *GetCertByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
