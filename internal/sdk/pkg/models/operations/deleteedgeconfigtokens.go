// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"net/http"
)

type DeleteEdgeConfigTokensRequestBody struct {
	Tokens []string `json:"tokens"`

	AdditionalProperties interface{} `json:"-"`
}
type _DeleteEdgeConfigTokensRequestBody DeleteEdgeConfigTokensRequestBody

func (c *DeleteEdgeConfigTokensRequestBody) UnmarshalJSON(bs []byte) error {
	data := _DeleteEdgeConfigTokensRequestBody{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = DeleteEdgeConfigTokensRequestBody(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "tokens")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c DeleteEdgeConfigTokensRequestBody) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_DeleteEdgeConfigTokensRequestBody(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

type DeleteEdgeConfigTokensRequest struct {
	RequestBody  *DeleteEdgeConfigTokensRequestBody `request:"mediaType=application/json"`
	EdgeConfigID string                             `pathParam:"style=simple,explode=false,name=edgeConfigId"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

type DeleteEdgeConfigTokensResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}
