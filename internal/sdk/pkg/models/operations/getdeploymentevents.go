// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/zchee/terraform-provider-vercel/internal/sdk/pkg/utils"
	"net/http"
)

type QueryParamBuilds int64

const (
	QueryParamBuildsZero QueryParamBuilds = 0
	QueryParamBuildsOne  QueryParamBuilds = 1
)

func (e QueryParamBuilds) ToPointer() *QueryParamBuilds {
	return &e
}

func (e *QueryParamBuilds) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = QueryParamBuilds(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamBuilds: %v", v)
	}
}

type Delimiter int64

const (
	DelimiterZero Delimiter = 0
	DelimiterOne  Delimiter = 1
)

func (e Delimiter) ToPointer() *Delimiter {
	return &e
}

func (e *Delimiter) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = Delimiter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Delimiter: %v", v)
	}
}

// Direction - Order of the returned events based on the timestamp.
type Direction string

const (
	DirectionBackward Direction = "backward"
	DirectionForward  Direction = "forward"
)

func (e Direction) ToPointer() *Direction {
	return &e
}

func (e *Direction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "backward":
		fallthrough
	case "forward":
		*e = Direction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Direction: %v", v)
	}
}

// Follow - When enabled, this endpoint will return live events as they happen.
type Follow int64

const (
	FollowZero Follow = 0
	FollowOne  Follow = 1
)

func (e Follow) ToPointer() *Follow {
	return &e
}

func (e *Follow) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = Follow(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Follow: %v", v)
	}
}

type StatusCodeType string

const (
	StatusCodeTypeInteger StatusCodeType = "integer"
	StatusCodeTypeStr     StatusCodeType = "str"
)

// StatusCode - HTTP status code range to filter events by.
type StatusCode struct {
	Integer *int64
	Str     *string

	Type StatusCodeType
}

func CreateStatusCodeInteger(integer int64) StatusCode {
	typ := StatusCodeTypeInteger

	return StatusCode{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateStatusCodeStr(str string) StatusCode {
	typ := StatusCodeTypeStr

	return StatusCode{
		Str:  &str,
		Type: typ,
	}
}

func (u *StatusCode) UnmarshalJSON(data []byte) error {

	integer := new(int64)
	if err := utils.UnmarshalJSON(data, &integer, "", true, true); err == nil {
		u.Integer = integer
		u.Type = StatusCodeTypeInteger
		return nil
	}

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = StatusCodeTypeStr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u StatusCode) MarshalJSON() ([]byte, error) {
	if u.Integer != nil {
		return utils.MarshalJSON(u.Integer, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsRequest struct {
	Builds    *QueryParamBuilds `queryParam:"style=form,explode=true,name=builds"`
	Delimiter *Delimiter        `queryParam:"style=form,explode=true,name=delimiter"`
	// Order of the returned events based on the timestamp.
	Direction *Direction `default:"forward" queryParam:"style=form,explode=true,name=direction"`
	// When enabled, this endpoint will return live events as they happen.
	Follow *Follow `queryParam:"style=form,explode=true,name=follow"`
	// The unique identifier or hostname of the deployment.
	IDOrURL string `pathParam:"style=simple,explode=false,name=idOrUrl"`
	// Maximum number of events to return. Provide `-1` to return all available logs.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Deployment build ID.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Timestamp for when build logs should be pulled from.
	Since *int64 `queryParam:"style=form,explode=true,name=since"`
	// HTTP status code range to filter events by.
	StatusCode *StatusCode `queryParam:"style=form,explode=true,name=statusCode"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// Timestamp for when the build logs should be pulled up until.
	Until *int64 `queryParam:"style=form,explode=true,name=until"`
}

func (g GetDeploymentEventsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetDeploymentEventsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetDeploymentEventsRequest) GetBuilds() *QueryParamBuilds {
	if o == nil {
		return nil
	}
	return o.Builds
}

func (o *GetDeploymentEventsRequest) GetDelimiter() *Delimiter {
	if o == nil {
		return nil
	}
	return o.Delimiter
}

func (o *GetDeploymentEventsRequest) GetDirection() *Direction {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *GetDeploymentEventsRequest) GetFollow() *Follow {
	if o == nil {
		return nil
	}
	return o.Follow
}

func (o *GetDeploymentEventsRequest) GetIDOrURL() string {
	if o == nil {
		return ""
	}
	return o.IDOrURL
}

func (o *GetDeploymentEventsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetDeploymentEventsRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetDeploymentEventsRequest) GetSince() *int64 {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *GetDeploymentEventsRequest) GetStatusCode() *StatusCode {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetDeploymentEventsRequest) GetUntil() *int64 {
	if o == nil {
		return nil
	}
	return o.Until
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload struct {
	Date         int64                                                                               `json:"date"`
	DeploymentID string                                                                              `json:"deploymentId"`
	ID           string                                                                              `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info `json:"info"`
	RequestID    *string                                                                             `json:"requestId,omitempty"`
	Serial       string                                                                              `json:"serial"`
	StatusCode   *int64                                                                              `json:"statusCode,omitempty"`
	Text         *string                                                                             `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeDelimiter              GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "delimiter"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeCommand                GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "command"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeStdout                 GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "stdout"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeStderr                 GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "stderr"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeExit                   GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "exit"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeDeploymentState        GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "deployment-state"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeMiddleware             GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "middleware"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeMiddlewareInvocation   GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "middleware-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeEdgeFunctionInvocation GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "edge-function-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77TypeFatal                  GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type = "fatal"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type: %v", v)
	}
}

type GetDeploymentEventsDeployments7 struct {
	Created int64                                                                                   `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type    `json:"type"`
}

func (o *GetDeploymentEventsDeployments7) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments7) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments7) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody77Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload struct {
	Date         int64                                                                                `json:"date"`
	DeploymentID string                                                                               `json:"deploymentId"`
	ID           string                                                                               `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info `json:"info"`
	RequestID    *string                                                                              `json:"requestId,omitempty"`
	Serial       string                                                                               `json:"serial"`
	Text         *string                                                                              `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76TypeMiddleware GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type = "middleware"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type: %v", v)
	}
}

type GetDeploymentEventsDeploymentsResponse6 struct {
	Created int64                                                                                   `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type    `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse6) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse6) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeploymentsResponse6) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody76Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75TypeExit GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type = "exit"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type: %v", v)
	}
}

type GetDeploymentEventsDeploymentsResponse5 struct {
	Created int64                                                                                   `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type    `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse5) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse5) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeploymentsResponse5) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody75Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload struct {
	Date         int64                                                                                `json:"date"`
	DeploymentID string                                                                               `json:"deploymentId"`
	ID           string                                                                               `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info `json:"info"`
	Serial       string                                                                               `json:"serial"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody74Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7TypeDelimiter GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type = "delimiter"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type: %v", v)
	}
}

type GetDeploymentEventsDeploymentsResponse4 struct {
	Created int64                                                                                  `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type    `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse4) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse4) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeploymentsResponse4) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody7Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload struct {
	Date         int64                                                                                `json:"date"`
	DeploymentID string                                                                               `json:"deploymentId"`
	ID           string                                                                               `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info `json:"info"`
	Serial       string                                                                               `json:"serial"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73TypeDeploymentState GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type = "deployment-state"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type: %v", v)
	}
}

type GetDeploymentEventsDeploymentsResponse3 struct {
	Created int64                                                                                   `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type    `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse3) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse3) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeploymentsResponse3) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody73Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72TypeCommand GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type = "command"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type: %v", v)
	}
}

type GetDeploymentEventsDeploymentsResponse2 struct {
	Created int64                                                                                   `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type    `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse2) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse2) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeploymentsResponse2) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody72Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse1 struct {
}

type GetDeploymentEvents7Type string

const (
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse1 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_1"
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse2 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_2"
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse3 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_3"
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse4 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_4"
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse5 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_5"
	GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse6 GetDeploymentEvents7Type = "getDeploymentEvents_deployments_response_6"
	GetDeploymentEvents7TypeGetDeploymentEventsDeployments7         GetDeploymentEvents7Type = "getDeploymentEvents_deployments_7"
)

type GetDeploymentEvents7 struct {
	GetDeploymentEventsDeploymentsResponse1 *GetDeploymentEventsDeploymentsResponse1
	GetDeploymentEventsDeploymentsResponse2 *GetDeploymentEventsDeploymentsResponse2
	GetDeploymentEventsDeploymentsResponse3 *GetDeploymentEventsDeploymentsResponse3
	GetDeploymentEventsDeploymentsResponse4 *GetDeploymentEventsDeploymentsResponse4
	GetDeploymentEventsDeploymentsResponse5 *GetDeploymentEventsDeploymentsResponse5
	GetDeploymentEventsDeploymentsResponse6 *GetDeploymentEventsDeploymentsResponse6
	GetDeploymentEventsDeployments7         *GetDeploymentEventsDeployments7

	Type GetDeploymentEvents7Type
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse1(getDeploymentEventsDeploymentsResponse1 GetDeploymentEventsDeploymentsResponse1) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse1

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse1: &getDeploymentEventsDeploymentsResponse1,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse2(getDeploymentEventsDeploymentsResponse2 GetDeploymentEventsDeploymentsResponse2) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse2

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse2: &getDeploymentEventsDeploymentsResponse2,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse3(getDeploymentEventsDeploymentsResponse3 GetDeploymentEventsDeploymentsResponse3) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse3

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse3: &getDeploymentEventsDeploymentsResponse3,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse4(getDeploymentEventsDeploymentsResponse4 GetDeploymentEventsDeploymentsResponse4) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse4

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse4: &getDeploymentEventsDeploymentsResponse4,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse5(getDeploymentEventsDeploymentsResponse5 GetDeploymentEventsDeploymentsResponse5) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse5

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse5: &getDeploymentEventsDeploymentsResponse5,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeploymentsResponse6(getDeploymentEventsDeploymentsResponse6 GetDeploymentEventsDeploymentsResponse6) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse6

	return GetDeploymentEvents7{
		GetDeploymentEventsDeploymentsResponse6: &getDeploymentEventsDeploymentsResponse6,
		Type:                                    typ,
	}
}

func CreateGetDeploymentEvents7GetDeploymentEventsDeployments7(getDeploymentEventsDeployments7 GetDeploymentEventsDeployments7) GetDeploymentEvents7 {
	typ := GetDeploymentEvents7TypeGetDeploymentEventsDeployments7

	return GetDeploymentEvents7{
		GetDeploymentEventsDeployments7: &getDeploymentEventsDeployments7,
		Type:                            typ,
	}
}

func (u *GetDeploymentEvents7) UnmarshalJSON(data []byte) error {

	getDeploymentEventsDeploymentsResponse1 := new(GetDeploymentEventsDeploymentsResponse1)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse1, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse1 = getDeploymentEventsDeploymentsResponse1
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse1
		return nil
	}

	getDeploymentEventsDeploymentsResponse2 := new(GetDeploymentEventsDeploymentsResponse2)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse2, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse2 = getDeploymentEventsDeploymentsResponse2
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse2
		return nil
	}

	getDeploymentEventsDeploymentsResponse3 := new(GetDeploymentEventsDeploymentsResponse3)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse3, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse3 = getDeploymentEventsDeploymentsResponse3
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse3
		return nil
	}

	getDeploymentEventsDeploymentsResponse4 := new(GetDeploymentEventsDeploymentsResponse4)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse4, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse4 = getDeploymentEventsDeploymentsResponse4
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse4
		return nil
	}

	getDeploymentEventsDeploymentsResponse5 := new(GetDeploymentEventsDeploymentsResponse5)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse5, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse5 = getDeploymentEventsDeploymentsResponse5
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse5
		return nil
	}

	getDeploymentEventsDeploymentsResponse6 := new(GetDeploymentEventsDeploymentsResponse6)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeploymentsResponse6, "", true, true); err == nil {
		u.GetDeploymentEventsDeploymentsResponse6 = getDeploymentEventsDeploymentsResponse6
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeploymentsResponse6
		return nil
	}

	getDeploymentEventsDeployments7 := new(GetDeploymentEventsDeployments7)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments7, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments7 = getDeploymentEventsDeployments7
		u.Type = GetDeploymentEvents7TypeGetDeploymentEventsDeployments7
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEvents7) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEventsDeploymentsResponse1 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse1, "", true)
	}

	if u.GetDeploymentEventsDeploymentsResponse2 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse2, "", true)
	}

	if u.GetDeploymentEventsDeploymentsResponse3 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse3, "", true)
	}

	if u.GetDeploymentEventsDeploymentsResponse4 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse4, "", true)
	}

	if u.GetDeploymentEventsDeploymentsResponse5 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse5, "", true)
	}

	if u.GetDeploymentEventsDeploymentsResponse6 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeploymentsResponse6, "", true)
	}

	if u.GetDeploymentEventsDeployments7 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments7, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload struct {
	Date         int64                                                                               `json:"date"`
	DeploymentID string                                                                              `json:"deploymentId"`
	ID           string                                                                              `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info `json:"info"`
	RequestID    *string                                                                             `json:"requestId,omitempty"`
	Serial       string                                                                              `json:"serial"`
	StatusCode   *int64                                                                              `json:"statusCode,omitempty"`
	Text         *string                                                                             `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeDelimiter              GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "delimiter"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeCommand                GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "command"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeStdout                 GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "stdout"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeStderr                 GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "stderr"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeExit                   GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "exit"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeDeploymentState        GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "deployment-state"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeMiddleware             GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "middleware"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeMiddlewareInvocation   GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "middleware-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeEdgeFunctionInvocation GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "edge-function-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6TypeFatal                  GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type = "fatal"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type: %v", v)
	}
}

type GetDeploymentEvents6 struct {
	Created int64                                                                                  `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type    `json:"type"`
}

func (o *GetDeploymentEvents6) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents6) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents6) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody6Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload struct {
	Date         int64                                                                              `json:"date"`
	DeploymentID string                                                                             `json:"deploymentId"`
	ID           string                                                                             `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo `json:"info"`
	RequestID    *string                                                                            `json:"requestId,omitempty"`
	Serial       string                                                                             `json:"serial"`
	Text         *string                                                                            `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5TypeMiddleware GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type = "middleware"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type: %v", v)
	}
}

type GetDeploymentEventsDeployments5 struct {
	Created int64                                                                                  `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type    `json:"type"`
}

func (o *GetDeploymentEventsDeployments5) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments5) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments5) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody5Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4TypeExit GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type = "exit"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type: %v", v)
	}
}

type GetDeploymentEventsDeployments4 struct {
	Created int64                                                                                  `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type    `json:"type"`
}

func (o *GetDeploymentEventsDeployments4) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments4) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments4) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody4Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload struct {
	Date         int64                                                                  `json:"date"`
	DeploymentID string                                                                 `json:"deploymentId"`
	ID           string                                                                 `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo `json:"info"`
	Serial       string                                                                 `json:"serial"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload) GetInfo() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3TypeDelimiter GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type = "delimiter"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type: %v", v)
	}
}

type GetDeploymentEventsDeployments3 struct {
	Created int64                                                                                  `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type    `json:"type"`
}

func (o *GetDeploymentEventsDeployments3) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments3) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments3) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBody3Type("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponse200Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponse200Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponse200Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponse200Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponse200Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload struct {
	Date         int64                                         `json:"date"`
	DeploymentID string                                        `json:"deploymentId"`
	ID           string                                        `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponse200Info `json:"info"`
	Serial       string                                        `json:"serial"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload) GetInfo() GetDeploymentEventsDeploymentsResponse200Info {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyTypeDeploymentState GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType = "deployment-state"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType: %v", v)
	}
}

type GetDeploymentEventsDeployments2 struct {
	Created int64                                                                                 `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType    `json:"type"`
}

func (o *GetDeploymentEventsDeployments2) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments2) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyPayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments2) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONResponseBodyType("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONTypeCommand GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType = "command"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType: %v", v)
	}
}

type GetDeploymentEventsDeployments1 struct {
	Created int64                                                                     `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType    `json:"type"`
}

func (o *GetDeploymentEventsDeployments1) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments1) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONPayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments1) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationStreamPlusJSONType("")
	}
	return o.Type
}

type GetDeploymentEventsResponseBodyType string

const (
	GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments1 GetDeploymentEventsResponseBodyType = "getDeploymentEvents_deployments_1"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments2 GetDeploymentEventsResponseBodyType = "getDeploymentEvents_deployments_2"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments3 GetDeploymentEventsResponseBodyType = "getDeploymentEvents_deployments_3"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments4 GetDeploymentEventsResponseBodyType = "getDeploymentEvents_deployments_4"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments5 GetDeploymentEventsResponseBodyType = "getDeploymentEvents_deployments_5"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEvents6            GetDeploymentEventsResponseBodyType = "getDeploymentEvents_6"
	GetDeploymentEventsResponseBodyTypeGetDeploymentEvents7            GetDeploymentEventsResponseBodyType = "getDeploymentEvents_7"
)

// GetDeploymentEventsResponseBody - A stream of jsonlines where each line is a deployment log item.
// Array of deployment logs for the provided query.
type GetDeploymentEventsResponseBody struct {
	GetDeploymentEventsDeployments1 *GetDeploymentEventsDeployments1
	GetDeploymentEventsDeployments2 *GetDeploymentEventsDeployments2
	GetDeploymentEventsDeployments3 *GetDeploymentEventsDeployments3
	GetDeploymentEventsDeployments4 *GetDeploymentEventsDeployments4
	GetDeploymentEventsDeployments5 *GetDeploymentEventsDeployments5
	GetDeploymentEvents6            *GetDeploymentEvents6
	GetDeploymentEvents7            *GetDeploymentEvents7

	Type GetDeploymentEventsResponseBodyType
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEventsDeployments1(getDeploymentEventsDeployments1 GetDeploymentEventsDeployments1) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments1

	return GetDeploymentEventsResponseBody{
		GetDeploymentEventsDeployments1: &getDeploymentEventsDeployments1,
		Type:                            typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEventsDeployments2(getDeploymentEventsDeployments2 GetDeploymentEventsDeployments2) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments2

	return GetDeploymentEventsResponseBody{
		GetDeploymentEventsDeployments2: &getDeploymentEventsDeployments2,
		Type:                            typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEventsDeployments3(getDeploymentEventsDeployments3 GetDeploymentEventsDeployments3) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments3

	return GetDeploymentEventsResponseBody{
		GetDeploymentEventsDeployments3: &getDeploymentEventsDeployments3,
		Type:                            typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEventsDeployments4(getDeploymentEventsDeployments4 GetDeploymentEventsDeployments4) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments4

	return GetDeploymentEventsResponseBody{
		GetDeploymentEventsDeployments4: &getDeploymentEventsDeployments4,
		Type:                            typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEventsDeployments5(getDeploymentEventsDeployments5 GetDeploymentEventsDeployments5) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments5

	return GetDeploymentEventsResponseBody{
		GetDeploymentEventsDeployments5: &getDeploymentEventsDeployments5,
		Type:                            typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEvents6(getDeploymentEvents6 GetDeploymentEvents6) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEvents6

	return GetDeploymentEventsResponseBody{
		GetDeploymentEvents6: &getDeploymentEvents6,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsResponseBodyGetDeploymentEvents7(getDeploymentEvents7 GetDeploymentEvents7) GetDeploymentEventsResponseBody {
	typ := GetDeploymentEventsResponseBodyTypeGetDeploymentEvents7

	return GetDeploymentEventsResponseBody{
		GetDeploymentEvents7: &getDeploymentEvents7,
		Type:                 typ,
	}
}

func (u *GetDeploymentEventsResponseBody) UnmarshalJSON(data []byte) error {

	getDeploymentEventsDeployments1 := new(GetDeploymentEventsDeployments1)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments1, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments1 = getDeploymentEventsDeployments1
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments1
		return nil
	}

	getDeploymentEventsDeployments2 := new(GetDeploymentEventsDeployments2)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments2, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments2 = getDeploymentEventsDeployments2
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments2
		return nil
	}

	getDeploymentEventsDeployments3 := new(GetDeploymentEventsDeployments3)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments3, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments3 = getDeploymentEventsDeployments3
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments3
		return nil
	}

	getDeploymentEventsDeployments4 := new(GetDeploymentEventsDeployments4)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments4, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments4 = getDeploymentEventsDeployments4
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments4
		return nil
	}

	getDeploymentEventsDeployments5 := new(GetDeploymentEventsDeployments5)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments5, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments5 = getDeploymentEventsDeployments5
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEventsDeployments5
		return nil
	}

	getDeploymentEvents6 := new(GetDeploymentEvents6)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents6, "", true, true); err == nil {
		u.GetDeploymentEvents6 = getDeploymentEvents6
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEvents6
		return nil
	}

	getDeploymentEvents7 := new(GetDeploymentEvents7)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents7, "", true, true); err == nil {
		u.GetDeploymentEvents7 = getDeploymentEvents7
		u.Type = GetDeploymentEventsResponseBodyTypeGetDeploymentEvents7
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEventsResponseBody) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEventsDeployments1 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments1, "", true)
	}

	if u.GetDeploymentEventsDeployments2 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments2, "", true)
	}

	if u.GetDeploymentEventsDeployments3 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments3, "", true)
	}

	if u.GetDeploymentEventsDeployments4 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments4, "", true)
	}

	if u.GetDeploymentEventsDeployments5 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments5, "", true)
	}

	if u.GetDeploymentEvents6 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents6, "", true)
	}

	if u.GetDeploymentEvents7 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents7, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsDeploymentsResponseInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsResponseInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsResponseInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsResponseInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsResponseInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsResponseInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload struct {
	Date         int64                                      `json:"date"`
	DeploymentID string                                     `json:"deploymentId"`
	ID           string                                     `json:"id"`
	Info         GetDeploymentEventsDeploymentsResponseInfo `json:"info"`
	RequestID    *string                                    `json:"requestId,omitempty"`
	Serial       string                                     `json:"serial"`
	StatusCode   *int64                                     `json:"statusCode,omitempty"`
	Text         *string                                    `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetInfo() GetDeploymentEventsDeploymentsResponseInfo {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponseInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeDelimiter              GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "delimiter"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeCommand                GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "command"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeStdout                 GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "stdout"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeStderr                 GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "stderr"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeExit                   GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "exit"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeDeploymentState        GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "deployment-state"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeMiddleware             GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "middleware"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeMiddlewareInvocation   GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "middleware-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeEdgeFunctionInvocation GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "edge-function-invocation"
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyTypeFatal                  GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType = "fatal"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type GetDeploymentEventsDeployments6 struct {
	Created int64                                                                    `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload          `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType `json:"type"`
}

func (o *GetDeploymentEventsDeployments6) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeployments6) GetPayload() GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationJSONPayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEventsDeployments6) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsDeploymentsInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsDeploymentsInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsDeploymentsInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsDeploymentsInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsDeploymentsInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponse200Payload struct {
	Date         int64                              `json:"date"`
	DeploymentID string                             `json:"deploymentId"`
	ID           string                             `json:"id"`
	Info         GetDeploymentEventsDeploymentsInfo `json:"info"`
	RequestID    *string                            `json:"requestId,omitempty"`
	Serial       string                             `json:"serial"`
	Text         *string                            `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetInfo() GetDeploymentEventsDeploymentsInfo {
	if o == nil {
		return GetDeploymentEventsDeploymentsInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponse200Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200ApplicationJSONType string

const (
	GetDeploymentEventsDeploymentsResponse200ApplicationJSONTypeMiddleware GetDeploymentEventsDeploymentsResponse200ApplicationJSONType = "middleware"
)

func (e GetDeploymentEventsDeploymentsResponse200ApplicationJSONType) ToPointer() *GetDeploymentEventsDeploymentsResponse200ApplicationJSONType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEventsDeploymentsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200ApplicationJSONType: %v", v)
	}
}

type GetDeploymentEvents5 struct {
	Created int64                                                        `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponse200Payload             `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200ApplicationJSONType `json:"type"`
}

func (o *GetDeploymentEvents5) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents5) GetPayload() GetDeploymentEventsDeploymentsResponse200Payload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents5) GetType() GetDeploymentEventsDeploymentsResponse200ApplicationJSONType {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200ApplicationJSONType("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponsePayload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEventsDeploymentsResponsePayload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsDeploymentsResponse200Type string

const (
	GetDeploymentEventsDeploymentsResponse200TypeExit GetDeploymentEventsDeploymentsResponse200Type = "exit"
)

func (e GetDeploymentEventsDeploymentsResponse200Type) ToPointer() *GetDeploymentEventsDeploymentsResponse200Type {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEventsDeploymentsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponse200Type: %v", v)
	}
}

type GetDeploymentEvents4 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEventsDeploymentsResponsePayload `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponse200Type `json:"type"`
}

func (o *GetDeploymentEvents4) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents4) GetPayload() GetDeploymentEventsDeploymentsResponsePayload {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponsePayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents4) GetType() GetDeploymentEventsDeploymentsResponse200Type {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponse200Type("")
	}
	return o.Type
}

type GetDeploymentEventsInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEventsInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEventsInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEventsInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEventsInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEventsInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsPayload struct {
	Date         int64                   `json:"date"`
	DeploymentID string                  `json:"deploymentId"`
	ID           string                  `json:"id"`
	Info         GetDeploymentEventsInfo `json:"info"`
	Serial       string                  `json:"serial"`
}

func (o *GetDeploymentEventsDeploymentsPayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsDeploymentsPayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsDeploymentsPayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsDeploymentsPayload) GetInfo() GetDeploymentEventsInfo {
	if o == nil {
		return GetDeploymentEventsInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEventsDeploymentsPayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsResponseType string

const (
	GetDeploymentEventsDeploymentsResponseTypeDelimiter GetDeploymentEventsDeploymentsResponseType = "delimiter"
)

func (e GetDeploymentEventsDeploymentsResponseType) ToPointer() *GetDeploymentEventsDeploymentsResponseType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEventsDeploymentsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsResponseType: %v", v)
	}
}

type GetDeploymentEvents3 struct {
	Created int64                                      `json:"created"`
	Payload GetDeploymentEventsDeploymentsPayload      `json:"payload"`
	Type    GetDeploymentEventsDeploymentsResponseType `json:"type"`
}

func (o *GetDeploymentEvents3) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents3) GetPayload() GetDeploymentEventsDeploymentsPayload {
	if o == nil {
		return GetDeploymentEventsDeploymentsPayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents3) GetType() GetDeploymentEventsDeploymentsResponseType {
	if o == nil {
		return GetDeploymentEventsDeploymentsResponseType("")
	}
	return o.Type
}

type Info struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *Info) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *Info) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Info) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *Info) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *Info) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEventsPayload struct {
	Date         int64  `json:"date"`
	DeploymentID string `json:"deploymentId"`
	ID           string `json:"id"`
	Info         Info   `json:"info"`
	Serial       string `json:"serial"`
}

func (o *GetDeploymentEventsPayload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEventsPayload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEventsPayload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEventsPayload) GetInfo() Info {
	if o == nil {
		return Info{}
	}
	return o.Info
}

func (o *GetDeploymentEventsPayload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEventsDeploymentsType string

const (
	GetDeploymentEventsDeploymentsTypeDeploymentState GetDeploymentEventsDeploymentsType = "deployment-state"
)

func (e GetDeploymentEventsDeploymentsType) ToPointer() *GetDeploymentEventsDeploymentsType {
	return &e
}

func (e *GetDeploymentEventsDeploymentsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEventsDeploymentsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDeploymentsType: %v", v)
	}
}

type GetDeploymentEvents2 struct {
	Created int64                              `json:"created"`
	Payload GetDeploymentEventsPayload         `json:"payload"`
	Type    GetDeploymentEventsDeploymentsType `json:"type"`
}

func (o *GetDeploymentEvents2) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents2) GetPayload() GetDeploymentEventsPayload {
	if o == nil {
		return GetDeploymentEventsPayload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents2) GetType() GetDeploymentEventsDeploymentsType {
	if o == nil {
		return GetDeploymentEventsDeploymentsType("")
	}
	return o.Type
}

type Payload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEventsType string

const (
	GetDeploymentEventsTypeCommand GetDeploymentEventsType = "command"
)

func (e GetDeploymentEventsType) ToPointer() *GetDeploymentEventsType {
	return &e
}

func (e *GetDeploymentEventsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEventsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsType: %v", v)
	}
}

type GetDeploymentEvents1 struct {
	Created int64                   `json:"created"`
	Payload Payload                 `json:"payload"`
	Type    GetDeploymentEventsType `json:"type"`
}

func (o *GetDeploymentEvents1) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents1) GetPayload() Payload {
	if o == nil {
		return Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents1) GetType() GetDeploymentEventsType {
	if o == nil {
		return GetDeploymentEventsType("")
	}
	return o.Type
}

type GetDeploymentEventsDeploymentsResponseBodyType string

const (
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents1            GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_1"
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents2            GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_2"
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents3            GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_3"
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents4            GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_4"
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents5            GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_5"
	GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEventsDeployments6 GetDeploymentEventsDeploymentsResponseBodyType = "getDeploymentEvents_deployments_6"
)

type GetDeploymentEventsDeploymentsResponseBody struct {
	GetDeploymentEvents1            *GetDeploymentEvents1
	GetDeploymentEvents2            *GetDeploymentEvents2
	GetDeploymentEvents3            *GetDeploymentEvents3
	GetDeploymentEvents4            *GetDeploymentEvents4
	GetDeploymentEvents5            *GetDeploymentEvents5
	GetDeploymentEventsDeployments6 *GetDeploymentEventsDeployments6

	Type GetDeploymentEventsDeploymentsResponseBodyType
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEvents1(getDeploymentEvents1 GetDeploymentEvents1) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents1

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEvents1: &getDeploymentEvents1,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEvents2(getDeploymentEvents2 GetDeploymentEvents2) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents2

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEvents2: &getDeploymentEvents2,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEvents3(getDeploymentEvents3 GetDeploymentEvents3) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents3

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEvents3: &getDeploymentEvents3,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEvents4(getDeploymentEvents4 GetDeploymentEvents4) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents4

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEvents4: &getDeploymentEvents4,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEvents5(getDeploymentEvents5 GetDeploymentEvents5) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents5

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEvents5: &getDeploymentEvents5,
		Type:                 typ,
	}
}

func CreateGetDeploymentEventsDeploymentsResponseBodyGetDeploymentEventsDeployments6(getDeploymentEventsDeployments6 GetDeploymentEventsDeployments6) GetDeploymentEventsDeploymentsResponseBody {
	typ := GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEventsDeployments6

	return GetDeploymentEventsDeploymentsResponseBody{
		GetDeploymentEventsDeployments6: &getDeploymentEventsDeployments6,
		Type:                            typ,
	}
}

func (u *GetDeploymentEventsDeploymentsResponseBody) UnmarshalJSON(data []byte) error {

	getDeploymentEvents1 := new(GetDeploymentEvents1)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents1, "", true, true); err == nil {
		u.GetDeploymentEvents1 = getDeploymentEvents1
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents1
		return nil
	}

	getDeploymentEvents2 := new(GetDeploymentEvents2)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents2, "", true, true); err == nil {
		u.GetDeploymentEvents2 = getDeploymentEvents2
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents2
		return nil
	}

	getDeploymentEvents3 := new(GetDeploymentEvents3)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents3, "", true, true); err == nil {
		u.GetDeploymentEvents3 = getDeploymentEvents3
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents3
		return nil
	}

	getDeploymentEvents4 := new(GetDeploymentEvents4)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents4, "", true, true); err == nil {
		u.GetDeploymentEvents4 = getDeploymentEvents4
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents4
		return nil
	}

	getDeploymentEvents5 := new(GetDeploymentEvents5)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents5, "", true, true); err == nil {
		u.GetDeploymentEvents5 = getDeploymentEvents5
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEvents5
		return nil
	}

	getDeploymentEventsDeployments6 := new(GetDeploymentEventsDeployments6)
	if err := utils.UnmarshalJSON(data, &getDeploymentEventsDeployments6, "", true, true); err == nil {
		u.GetDeploymentEventsDeployments6 = getDeploymentEventsDeployments6
		u.Type = GetDeploymentEventsDeploymentsResponseBodyTypeGetDeploymentEventsDeployments6
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEventsDeploymentsResponseBody) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEvents1 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents1, "", true)
	}

	if u.GetDeploymentEvents2 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents2, "", true)
	}

	if u.GetDeploymentEvents3 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents3, "", true)
	}

	if u.GetDeploymentEvents4 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents4, "", true)
	}

	if u.GetDeploymentEvents5 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents5, "", true)
	}

	if u.GetDeploymentEventsDeployments6 != nil {
		return utils.MarshalJSON(u.GetDeploymentEventsDeployments6, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A stream of jsonlines where each line is a deployment log item.
	// Array of deployment logs for the provided query.
	OneOf *GetDeploymentEventsResponseBody
	// A stream of jsonlines where each line is a deployment log item.
	// Array of deployment logs for the provided query.
	Unions []GetDeploymentEventsDeploymentsResponseBody
}

func (o *GetDeploymentEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetDeploymentEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetDeploymentEventsResponse) GetOneOf() *GetDeploymentEventsResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}

func (o *GetDeploymentEventsResponse) GetUnions() []GetDeploymentEventsDeploymentsResponseBody {
	if o == nil {
		return nil
	}
	return o.Unions
}
