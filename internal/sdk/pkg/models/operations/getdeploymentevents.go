// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
	"vercel/internal/sdk/pkg/utils"
)

type GetDeploymentEventsBuilds int64

const (
	GetDeploymentEventsBuildsZero GetDeploymentEventsBuilds = 0
	GetDeploymentEventsBuildsOne  GetDeploymentEventsBuilds = 1
)

func (e GetDeploymentEventsBuilds) ToPointer() *GetDeploymentEventsBuilds {
	return &e
}

func (e *GetDeploymentEventsBuilds) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = GetDeploymentEventsBuilds(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsBuilds: %v", v)
	}
}

type GetDeploymentEventsDelimiter int64

const (
	GetDeploymentEventsDelimiterZero GetDeploymentEventsDelimiter = 0
	GetDeploymentEventsDelimiterOne  GetDeploymentEventsDelimiter = 1
)

func (e GetDeploymentEventsDelimiter) ToPointer() *GetDeploymentEventsDelimiter {
	return &e
}

func (e *GetDeploymentEventsDelimiter) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = GetDeploymentEventsDelimiter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDelimiter: %v", v)
	}
}

// GetDeploymentEventsDirection - Order of the returned events based on the timestamp.
type GetDeploymentEventsDirection string

const (
	GetDeploymentEventsDirectionBackward GetDeploymentEventsDirection = "backward"
	GetDeploymentEventsDirectionForward  GetDeploymentEventsDirection = "forward"
)

func (e GetDeploymentEventsDirection) ToPointer() *GetDeploymentEventsDirection {
	return &e
}

func (e *GetDeploymentEventsDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "backward":
		fallthrough
	case "forward":
		*e = GetDeploymentEventsDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsDirection: %v", v)
	}
}

// GetDeploymentEventsFollow - When enabled, this endpoint will return live events as they happen.
type GetDeploymentEventsFollow int64

const (
	GetDeploymentEventsFollowZero GetDeploymentEventsFollow = 0
	GetDeploymentEventsFollowOne  GetDeploymentEventsFollow = 1
)

func (e GetDeploymentEventsFollow) ToPointer() *GetDeploymentEventsFollow {
	return &e
}

func (e *GetDeploymentEventsFollow) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = GetDeploymentEventsFollow(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEventsFollow: %v", v)
	}
}

type GetDeploymentEventsStatusCodeType string

const (
	GetDeploymentEventsStatusCodeTypeInteger GetDeploymentEventsStatusCodeType = "integer"
	GetDeploymentEventsStatusCodeTypeStr     GetDeploymentEventsStatusCodeType = "str"
)

type GetDeploymentEventsStatusCode struct {
	Integer *int64
	Str     *string

	Type GetDeploymentEventsStatusCodeType
}

func CreateGetDeploymentEventsStatusCodeInteger(integer int64) GetDeploymentEventsStatusCode {
	typ := GetDeploymentEventsStatusCodeTypeInteger

	return GetDeploymentEventsStatusCode{
		Integer: &integer,
		Type:    typ,
	}
}

func CreateGetDeploymentEventsStatusCodeStr(str string) GetDeploymentEventsStatusCode {
	typ := GetDeploymentEventsStatusCodeTypeStr

	return GetDeploymentEventsStatusCode{
		Str:  &str,
		Type: typ,
	}
}

func (u *GetDeploymentEventsStatusCode) UnmarshalJSON(data []byte) error {

	integer := new(int64)
	if err := utils.UnmarshalJSON(data, &integer, "", true, true); err == nil {
		u.Integer = integer
		u.Type = GetDeploymentEventsStatusCodeTypeInteger
		return nil
	}

	str := new(string)
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = str
		u.Type = GetDeploymentEventsStatusCodeTypeStr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEventsStatusCode) MarshalJSON() ([]byte, error) {
	if u.Integer != nil {
		return utils.MarshalJSON(u.Integer, "", true)
	}

	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsRequest struct {
	Builds    *GetDeploymentEventsBuilds    `queryParam:"style=form,explode=true,name=builds"`
	Delimiter *GetDeploymentEventsDelimiter `queryParam:"style=form,explode=true,name=delimiter"`
	// Order of the returned events based on the timestamp.
	Direction *GetDeploymentEventsDirection `default:"forward" queryParam:"style=form,explode=true,name=direction"`
	// When enabled, this endpoint will return live events as they happen.
	Follow *GetDeploymentEventsFollow `queryParam:"style=form,explode=true,name=follow"`
	// The unique identifier or hostname of the deployment.
	IDOrURL string `pathParam:"style=simple,explode=false,name=idOrUrl"`
	// Maximum number of events to return. Provide `-1` to return all available logs.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Deployment build ID.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Timestamp for when build logs should be pulled from.
	Since *int64 `queryParam:"style=form,explode=true,name=since"`
	// HTTP status code range to filter events by.
	StatusCode *GetDeploymentEventsStatusCode `queryParam:"style=form,explode=true,name=statusCode"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
	// Timestamp for when the build logs should be pulled up until.
	Until *int64 `queryParam:"style=form,explode=true,name=until"`
}

func (g GetDeploymentEventsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetDeploymentEventsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetDeploymentEventsRequest) GetBuilds() *GetDeploymentEventsBuilds {
	if o == nil {
		return nil
	}
	return o.Builds
}

func (o *GetDeploymentEventsRequest) GetDelimiter() *GetDeploymentEventsDelimiter {
	if o == nil {
		return nil
	}
	return o.Delimiter
}

func (o *GetDeploymentEventsRequest) GetDirection() *GetDeploymentEventsDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *GetDeploymentEventsRequest) GetFollow() *GetDeploymentEventsFollow {
	if o == nil {
		return nil
	}
	return o.Follow
}

func (o *GetDeploymentEventsRequest) GetIDOrURL() string {
	if o == nil {
		return ""
	}
	return o.IDOrURL
}

func (o *GetDeploymentEventsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetDeploymentEventsRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetDeploymentEventsRequest) GetSince() *int64 {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *GetDeploymentEventsRequest) GetStatusCode() *GetDeploymentEventsStatusCode {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsRequest) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *GetDeploymentEventsRequest) GetUntil() *int64 {
	if o == nil {
		return nil
	}
	return o.Until
}

type GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON77Payload struct {
	Date         int64                                                        `json:"date"`
	DeploymentID string                                                       `json:"deploymentId"`
	ID           string                                                       `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo `json:"info"`
	RequestID    *string                                                      `json:"requestId,omitempty"`
	Serial       string                                                       `json:"serial"`
	StatusCode   *int64                                                       `json:"statusCode,omitempty"`
	Text         *string                                                      `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON77PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON77Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeDelimiter              GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "delimiter"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeCommand                GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "command"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeStdout                 GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "stdout"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeStderr                 GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "stderr"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeExit                   GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "exit"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeDeploymentState        GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "deployment-state"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeMiddleware             GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "middleware"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeMiddlewareInvocation   GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "middleware-invocation"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeEdgeFunctionInvocation GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "edge-function-invocation"
	GetDeploymentEvents200ApplicationStreamPlusJSON77TypeFatal                  GetDeploymentEvents200ApplicationStreamPlusJSON77Type = "fatal"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON77Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON77Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON77Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON77Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON77Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON77 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON77Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON77Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON77Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON77Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON77) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON77Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON77Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON76Payload struct {
	Date         int64                                                        `json:"date"`
	DeploymentID string                                                       `json:"deploymentId"`
	ID           string                                                       `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo `json:"info"`
	RequestID    *string                                                      `json:"requestId,omitempty"`
	Serial       string                                                       `json:"serial"`
	Text         *string                                                      `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON76PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON76Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON76TypeMiddleware GetDeploymentEvents200ApplicationStreamPlusJSON76Type = "middleware"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON76Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON76Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON76Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON76Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON76Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON76 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON76Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON76Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON76Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON76Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON76) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON76Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON76Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON75Payload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON75Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON75TypeExit GetDeploymentEvents200ApplicationStreamPlusJSON75Type = "exit"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON75Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON75Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON75Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON75Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON75Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON75 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON75Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON75Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON75Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON75Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON75) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON75Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON75Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON74Payload struct {
	Date         int64                                                        `json:"date"`
	DeploymentID string                                                       `json:"deploymentId"`
	ID           string                                                       `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo `json:"info"`
	Serial       string                                                       `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON74PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationStreamPlusJSON74Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON74TypeDelimiter GetDeploymentEvents200ApplicationStreamPlusJSON74Type = "delimiter"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON74Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON74Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON74Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON74Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON74Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON74 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON74Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON74Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON74Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON74Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON74) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON74Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON74Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON73Payload struct {
	Date         int64                                                        `json:"date"`
	DeploymentID string                                                       `json:"deploymentId"`
	ID           string                                                       `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo `json:"info"`
	Serial       string                                                       `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON73PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationStreamPlusJSON73Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON73TypeDeploymentState GetDeploymentEvents200ApplicationStreamPlusJSON73Type = "deployment-state"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON73Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON73Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON73Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON73Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON73Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON73 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON73Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON73Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON73Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON73Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON73) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON73Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON73Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON72Payload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON72Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON72TypeCommand GetDeploymentEvents200ApplicationStreamPlusJSON72Type = "command"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON72Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON72Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON72Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON72Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON72Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON72 struct {
	Created int64                                                    `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON72Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON72Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON72Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON72Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON72) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON72Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON72Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON71 struct {
}

type GetDeploymentEvents200ApplicationStreamPlusJSON7Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON71 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_1"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON72 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_2"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON73 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_3"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON74 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_4"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON75 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_5"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON76 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_6"
	GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON77 GetDeploymentEvents200ApplicationStreamPlusJSON7Type = "getDeploymentEvents_200ApplicationStream+json_7_7"
)

type GetDeploymentEvents200ApplicationStreamPlusJSON7 struct {
	GetDeploymentEvents200ApplicationStreamPlusJSON71 *GetDeploymentEvents200ApplicationStreamPlusJSON71
	GetDeploymentEvents200ApplicationStreamPlusJSON72 *GetDeploymentEvents200ApplicationStreamPlusJSON72
	GetDeploymentEvents200ApplicationStreamPlusJSON73 *GetDeploymentEvents200ApplicationStreamPlusJSON73
	GetDeploymentEvents200ApplicationStreamPlusJSON74 *GetDeploymentEvents200ApplicationStreamPlusJSON74
	GetDeploymentEvents200ApplicationStreamPlusJSON75 *GetDeploymentEvents200ApplicationStreamPlusJSON75
	GetDeploymentEvents200ApplicationStreamPlusJSON76 *GetDeploymentEvents200ApplicationStreamPlusJSON76
	GetDeploymentEvents200ApplicationStreamPlusJSON77 *GetDeploymentEvents200ApplicationStreamPlusJSON77

	Type GetDeploymentEvents200ApplicationStreamPlusJSON7Type
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON71(getDeploymentEvents200ApplicationStreamPlusJSON71 GetDeploymentEvents200ApplicationStreamPlusJSON71) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON71

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON71: &getDeploymentEvents200ApplicationStreamPlusJSON71,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON72(getDeploymentEvents200ApplicationStreamPlusJSON72 GetDeploymentEvents200ApplicationStreamPlusJSON72) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON72

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON72: &getDeploymentEvents200ApplicationStreamPlusJSON72,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON73(getDeploymentEvents200ApplicationStreamPlusJSON73 GetDeploymentEvents200ApplicationStreamPlusJSON73) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON73

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON73: &getDeploymentEvents200ApplicationStreamPlusJSON73,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON74(getDeploymentEvents200ApplicationStreamPlusJSON74 GetDeploymentEvents200ApplicationStreamPlusJSON74) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON74

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON74: &getDeploymentEvents200ApplicationStreamPlusJSON74,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON75(getDeploymentEvents200ApplicationStreamPlusJSON75 GetDeploymentEvents200ApplicationStreamPlusJSON75) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON75

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON75: &getDeploymentEvents200ApplicationStreamPlusJSON75,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON76(getDeploymentEvents200ApplicationStreamPlusJSON76 GetDeploymentEvents200ApplicationStreamPlusJSON76) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON76

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON76: &getDeploymentEvents200ApplicationStreamPlusJSON76,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSON7GetDeploymentEvents200ApplicationStreamPlusJSON77(getDeploymentEvents200ApplicationStreamPlusJSON77 GetDeploymentEvents200ApplicationStreamPlusJSON77) GetDeploymentEvents200ApplicationStreamPlusJSON7 {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON77

	return GetDeploymentEvents200ApplicationStreamPlusJSON7{
		GetDeploymentEvents200ApplicationStreamPlusJSON77: &getDeploymentEvents200ApplicationStreamPlusJSON77,
		Type: typ,
	}
}

func (u *GetDeploymentEvents200ApplicationStreamPlusJSON7) UnmarshalJSON(data []byte) error {

	getDeploymentEvents200ApplicationStreamPlusJSON71 := new(GetDeploymentEvents200ApplicationStreamPlusJSON71)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON71, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON71 = getDeploymentEvents200ApplicationStreamPlusJSON71
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON71
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON72 := new(GetDeploymentEvents200ApplicationStreamPlusJSON72)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON72, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON72 = getDeploymentEvents200ApplicationStreamPlusJSON72
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON72
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON73 := new(GetDeploymentEvents200ApplicationStreamPlusJSON73)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON73, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON73 = getDeploymentEvents200ApplicationStreamPlusJSON73
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON73
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON74 := new(GetDeploymentEvents200ApplicationStreamPlusJSON74)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON74, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON74 = getDeploymentEvents200ApplicationStreamPlusJSON74
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON74
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON75 := new(GetDeploymentEvents200ApplicationStreamPlusJSON75)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON75, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON75 = getDeploymentEvents200ApplicationStreamPlusJSON75
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON75
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON76 := new(GetDeploymentEvents200ApplicationStreamPlusJSON76)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON76, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON76 = getDeploymentEvents200ApplicationStreamPlusJSON76
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON76
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON77 := new(GetDeploymentEvents200ApplicationStreamPlusJSON77)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON77, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON77 = getDeploymentEvents200ApplicationStreamPlusJSON77
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSON7TypeGetDeploymentEvents200ApplicationStreamPlusJSON77
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEvents200ApplicationStreamPlusJSON7) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEvents200ApplicationStreamPlusJSON71 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON71, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON72 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON72, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON73 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON73, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON74 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON74, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON75 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON75, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON76 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON76, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON77 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON77, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON6Payload struct {
	Date         int64                                                       `json:"date"`
	DeploymentID string                                                      `json:"deploymentId"`
	ID           string                                                      `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo `json:"info"`
	RequestID    *string                                                     `json:"requestId,omitempty"`
	Serial       string                                                      `json:"serial"`
	StatusCode   *int64                                                      `json:"statusCode,omitempty"`
	Text         *string                                                     `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON6PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON6Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeDelimiter              GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "delimiter"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeCommand                GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "command"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeStdout                 GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "stdout"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeStderr                 GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "stderr"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeExit                   GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "exit"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeDeploymentState        GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "deployment-state"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeMiddleware             GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "middleware"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeMiddlewareInvocation   GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "middleware-invocation"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeEdgeFunctionInvocation GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "edge-function-invocation"
	GetDeploymentEvents200ApplicationStreamPlusJSON6TypeFatal                  GetDeploymentEvents200ApplicationStreamPlusJSON6Type = "fatal"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON6Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON6Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON6Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON6Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON6Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON6 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON6Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON6Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON6Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON6Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON6) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON6Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON6Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON5Payload struct {
	Date         int64                                                       `json:"date"`
	DeploymentID string                                                      `json:"deploymentId"`
	ID           string                                                      `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo `json:"info"`
	RequestID    *string                                                     `json:"requestId,omitempty"`
	Serial       string                                                      `json:"serial"`
	Text         *string                                                     `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON5PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON5Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON5TypeMiddleware GetDeploymentEvents200ApplicationStreamPlusJSON5Type = "middleware"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON5Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON5Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON5Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON5Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON5Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON5 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON5Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON5Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON5Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON5Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON5) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON5Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON5Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON4Payload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON4Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON4TypeExit GetDeploymentEvents200ApplicationStreamPlusJSON4Type = "exit"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON4Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON4Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON4Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON4Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON4Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON4 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON4Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON4Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON4Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON4Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON4) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON4Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON4Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON3Payload struct {
	Date         int64                                                       `json:"date"`
	DeploymentID string                                                      `json:"deploymentId"`
	ID           string                                                      `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo `json:"info"`
	Serial       string                                                      `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON3PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationStreamPlusJSON3Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON3TypeDelimiter GetDeploymentEvents200ApplicationStreamPlusJSON3Type = "delimiter"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON3Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON3Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON3Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON3 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON3Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON3Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON3Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON3Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON3) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON3Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON3Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON2Payload struct {
	Date         int64                                                       `json:"date"`
	DeploymentID string                                                      `json:"deploymentId"`
	ID           string                                                      `json:"id"`
	Info         GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo `json:"info"`
	Serial       string                                                      `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2Payload) GetInfo() GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON2PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationStreamPlusJSON2Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON2TypeDeploymentState GetDeploymentEvents200ApplicationStreamPlusJSON2Type = "deployment-state"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON2Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON2Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON2Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON2Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON2Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON2 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON2Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON2Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON2Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON2Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON2) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON2Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON2Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSON1Payload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationStreamPlusJSON1Type string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSON1TypeCommand GetDeploymentEvents200ApplicationStreamPlusJSON1Type = "command"
)

func (e GetDeploymentEvents200ApplicationStreamPlusJSON1Type) ToPointer() *GetDeploymentEvents200ApplicationStreamPlusJSON1Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationStreamPlusJSON1Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEvents200ApplicationStreamPlusJSON1Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationStreamPlusJSON1Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationStreamPlusJSON1 struct {
	Created int64                                                   `json:"created"`
	Payload GetDeploymentEvents200ApplicationStreamPlusJSON1Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationStreamPlusJSON1Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1) GetPayload() GetDeploymentEvents200ApplicationStreamPlusJSON1Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON1Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationStreamPlusJSON1) GetType() GetDeploymentEvents200ApplicationStreamPlusJSON1Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationStreamPlusJSON1Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationStreamPlusJSONType string

const (
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON1 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_1"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON2 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_2"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON3 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_3"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON4 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_4"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON5 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_5"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON6 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_6"
	GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON7 GetDeploymentEvents200ApplicationStreamPlusJSONType = "getDeploymentEvents_200ApplicationStream+json_7"
)

type GetDeploymentEvents200ApplicationStreamPlusJSON struct {
	GetDeploymentEvents200ApplicationStreamPlusJSON1 *GetDeploymentEvents200ApplicationStreamPlusJSON1
	GetDeploymentEvents200ApplicationStreamPlusJSON2 *GetDeploymentEvents200ApplicationStreamPlusJSON2
	GetDeploymentEvents200ApplicationStreamPlusJSON3 *GetDeploymentEvents200ApplicationStreamPlusJSON3
	GetDeploymentEvents200ApplicationStreamPlusJSON4 *GetDeploymentEvents200ApplicationStreamPlusJSON4
	GetDeploymentEvents200ApplicationStreamPlusJSON5 *GetDeploymentEvents200ApplicationStreamPlusJSON5
	GetDeploymentEvents200ApplicationStreamPlusJSON6 *GetDeploymentEvents200ApplicationStreamPlusJSON6
	GetDeploymentEvents200ApplicationStreamPlusJSON7 *GetDeploymentEvents200ApplicationStreamPlusJSON7

	Type GetDeploymentEvents200ApplicationStreamPlusJSONType
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON1(getDeploymentEvents200ApplicationStreamPlusJSON1 GetDeploymentEvents200ApplicationStreamPlusJSON1) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON1

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON1: &getDeploymentEvents200ApplicationStreamPlusJSON1,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON2(getDeploymentEvents200ApplicationStreamPlusJSON2 GetDeploymentEvents200ApplicationStreamPlusJSON2) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON2

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON2: &getDeploymentEvents200ApplicationStreamPlusJSON2,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON3(getDeploymentEvents200ApplicationStreamPlusJSON3 GetDeploymentEvents200ApplicationStreamPlusJSON3) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON3

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON3: &getDeploymentEvents200ApplicationStreamPlusJSON3,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON4(getDeploymentEvents200ApplicationStreamPlusJSON4 GetDeploymentEvents200ApplicationStreamPlusJSON4) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON4

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON4: &getDeploymentEvents200ApplicationStreamPlusJSON4,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON5(getDeploymentEvents200ApplicationStreamPlusJSON5 GetDeploymentEvents200ApplicationStreamPlusJSON5) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON5

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON5: &getDeploymentEvents200ApplicationStreamPlusJSON5,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON6(getDeploymentEvents200ApplicationStreamPlusJSON6 GetDeploymentEvents200ApplicationStreamPlusJSON6) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON6

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON6: &getDeploymentEvents200ApplicationStreamPlusJSON6,
		Type: typ,
	}
}

func CreateGetDeploymentEvents200ApplicationStreamPlusJSONGetDeploymentEvents200ApplicationStreamPlusJSON7(getDeploymentEvents200ApplicationStreamPlusJSON7 GetDeploymentEvents200ApplicationStreamPlusJSON7) GetDeploymentEvents200ApplicationStreamPlusJSON {
	typ := GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON7

	return GetDeploymentEvents200ApplicationStreamPlusJSON{
		GetDeploymentEvents200ApplicationStreamPlusJSON7: &getDeploymentEvents200ApplicationStreamPlusJSON7,
		Type: typ,
	}
}

func (u *GetDeploymentEvents200ApplicationStreamPlusJSON) UnmarshalJSON(data []byte) error {

	getDeploymentEvents200ApplicationStreamPlusJSON1 := new(GetDeploymentEvents200ApplicationStreamPlusJSON1)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON1, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON1 = getDeploymentEvents200ApplicationStreamPlusJSON1
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON1
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON2 := new(GetDeploymentEvents200ApplicationStreamPlusJSON2)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON2, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON2 = getDeploymentEvents200ApplicationStreamPlusJSON2
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON2
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON3 := new(GetDeploymentEvents200ApplicationStreamPlusJSON3)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON3, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON3 = getDeploymentEvents200ApplicationStreamPlusJSON3
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON3
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON4 := new(GetDeploymentEvents200ApplicationStreamPlusJSON4)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON4, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON4 = getDeploymentEvents200ApplicationStreamPlusJSON4
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON4
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON5 := new(GetDeploymentEvents200ApplicationStreamPlusJSON5)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON5, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON5 = getDeploymentEvents200ApplicationStreamPlusJSON5
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON5
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON6 := new(GetDeploymentEvents200ApplicationStreamPlusJSON6)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON6, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON6 = getDeploymentEvents200ApplicationStreamPlusJSON6
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON6
		return nil
	}

	getDeploymentEvents200ApplicationStreamPlusJSON7 := new(GetDeploymentEvents200ApplicationStreamPlusJSON7)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationStreamPlusJSON7, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationStreamPlusJSON7 = getDeploymentEvents200ApplicationStreamPlusJSON7
		u.Type = GetDeploymentEvents200ApplicationStreamPlusJSONTypeGetDeploymentEvents200ApplicationStreamPlusJSON7
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEvents200ApplicationStreamPlusJSON) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEvents200ApplicationStreamPlusJSON1 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON1, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON2 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON2, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON3 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON3, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON4 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON4, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON5 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON5, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON6 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON6, "", true)
	}

	if u.GetDeploymentEvents200ApplicationStreamPlusJSON7 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationStreamPlusJSON7, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEvents200ApplicationJSON6PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON6PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationJSON6PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationJSON6PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationJSON6PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationJSON6PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON6Payload struct {
	Date         int64                                             `json:"date"`
	DeploymentID string                                            `json:"deploymentId"`
	ID           string                                            `json:"id"`
	Info         GetDeploymentEvents200ApplicationJSON6PayloadInfo `json:"info"`
	RequestID    *string                                           `json:"requestId,omitempty"`
	Serial       string                                            `json:"serial"`
	StatusCode   *int64                                            `json:"statusCode,omitempty"`
	Text         *string                                           `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetInfo() GetDeploymentEvents200ApplicationJSON6PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON6PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *GetDeploymentEvents200ApplicationJSON6Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationJSON6Type string

const (
	GetDeploymentEvents200ApplicationJSON6TypeDelimiter              GetDeploymentEvents200ApplicationJSON6Type = "delimiter"
	GetDeploymentEvents200ApplicationJSON6TypeCommand                GetDeploymentEvents200ApplicationJSON6Type = "command"
	GetDeploymentEvents200ApplicationJSON6TypeStdout                 GetDeploymentEvents200ApplicationJSON6Type = "stdout"
	GetDeploymentEvents200ApplicationJSON6TypeStderr                 GetDeploymentEvents200ApplicationJSON6Type = "stderr"
	GetDeploymentEvents200ApplicationJSON6TypeExit                   GetDeploymentEvents200ApplicationJSON6Type = "exit"
	GetDeploymentEvents200ApplicationJSON6TypeDeploymentState        GetDeploymentEvents200ApplicationJSON6Type = "deployment-state"
	GetDeploymentEvents200ApplicationJSON6TypeMiddleware             GetDeploymentEvents200ApplicationJSON6Type = "middleware"
	GetDeploymentEvents200ApplicationJSON6TypeMiddlewareInvocation   GetDeploymentEvents200ApplicationJSON6Type = "middleware-invocation"
	GetDeploymentEvents200ApplicationJSON6TypeEdgeFunctionInvocation GetDeploymentEvents200ApplicationJSON6Type = "edge-function-invocation"
	GetDeploymentEvents200ApplicationJSON6TypeFatal                  GetDeploymentEvents200ApplicationJSON6Type = "fatal"
)

func (e GetDeploymentEvents200ApplicationJSON6Type) ToPointer() *GetDeploymentEvents200ApplicationJSON6Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON6Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		fallthrough
	case "command":
		fallthrough
	case "stdout":
		fallthrough
	case "stderr":
		fallthrough
	case "exit":
		fallthrough
	case "deployment-state":
		fallthrough
	case "middleware":
		fallthrough
	case "middleware-invocation":
		fallthrough
	case "edge-function-invocation":
		fallthrough
	case "fatal":
		*e = GetDeploymentEvents200ApplicationJSON6Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON6Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON6 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON6Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON6Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON6) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON6) GetPayload() GetDeploymentEvents200ApplicationJSON6Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON6Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON6) GetType() GetDeploymentEvents200ApplicationJSON6Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON6Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON5PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON5PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationJSON5PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationJSON5PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationJSON5PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationJSON5PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON5Payload struct {
	Date         int64                                             `json:"date"`
	DeploymentID string                                            `json:"deploymentId"`
	ID           string                                            `json:"id"`
	Info         GetDeploymentEvents200ApplicationJSON5PayloadInfo `json:"info"`
	RequestID    *string                                           `json:"requestId,omitempty"`
	Serial       string                                            `json:"serial"`
	Text         *string                                           `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetInfo() GetDeploymentEvents200ApplicationJSON5PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON5PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetRequestID() *string {
	if o == nil {
		return nil
	}
	return o.RequestID
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationJSON5Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationJSON5Type string

const (
	GetDeploymentEvents200ApplicationJSON5TypeMiddleware GetDeploymentEvents200ApplicationJSON5Type = "middleware"
)

func (e GetDeploymentEvents200ApplicationJSON5Type) ToPointer() *GetDeploymentEvents200ApplicationJSON5Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON5Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "middleware":
		*e = GetDeploymentEvents200ApplicationJSON5Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON5Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON5 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON5Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON5Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON5) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON5) GetPayload() GetDeploymentEvents200ApplicationJSON5Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON5Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON5) GetType() GetDeploymentEvents200ApplicationJSON5Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON5Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON4Payload struct {
	Created      int64   `json:"created"`
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationJSON4Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationJSON4Type string

const (
	GetDeploymentEvents200ApplicationJSON4TypeExit GetDeploymentEvents200ApplicationJSON4Type = "exit"
)

func (e GetDeploymentEvents200ApplicationJSON4Type) ToPointer() *GetDeploymentEvents200ApplicationJSON4Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON4Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exit":
		*e = GetDeploymentEvents200ApplicationJSON4Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON4Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON4 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON4Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON4Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON4) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON4) GetPayload() GetDeploymentEvents200ApplicationJSON4Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON4Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON4) GetType() GetDeploymentEvents200ApplicationJSON4Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON4Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON3PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON3PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationJSON3PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationJSON3PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationJSON3PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationJSON3PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON3Payload struct {
	Date         int64                                             `json:"date"`
	DeploymentID string                                            `json:"deploymentId"`
	ID           string                                            `json:"id"`
	Info         GetDeploymentEvents200ApplicationJSON3PayloadInfo `json:"info"`
	Serial       string                                            `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationJSON3Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON3Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON3Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON3Payload) GetInfo() GetDeploymentEvents200ApplicationJSON3PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON3PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationJSON3Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationJSON3Type string

const (
	GetDeploymentEvents200ApplicationJSON3TypeDelimiter GetDeploymentEvents200ApplicationJSON3Type = "delimiter"
)

func (e GetDeploymentEvents200ApplicationJSON3Type) ToPointer() *GetDeploymentEvents200ApplicationJSON3Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "delimiter":
		*e = GetDeploymentEvents200ApplicationJSON3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON3Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON3 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON3Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON3Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON3) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON3) GetPayload() GetDeploymentEvents200ApplicationJSON3Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON3Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON3) GetType() GetDeploymentEvents200ApplicationJSON3Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON3Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON2PayloadInfo struct {
	Entrypoint *string `json:"entrypoint,omitempty"`
	Name       string  `json:"name"`
	Path       *string `json:"path,omitempty"`
	Step       *string `json:"step,omitempty"`
	Type       string  `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON2PayloadInfo) GetEntrypoint() *string {
	if o == nil {
		return nil
	}
	return o.Entrypoint
}

func (o *GetDeploymentEvents200ApplicationJSON2PayloadInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GetDeploymentEvents200ApplicationJSON2PayloadInfo) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetDeploymentEvents200ApplicationJSON2PayloadInfo) GetStep() *string {
	if o == nil {
		return nil
	}
	return o.Step
}

func (o *GetDeploymentEvents200ApplicationJSON2PayloadInfo) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON2Payload struct {
	Date         int64                                             `json:"date"`
	DeploymentID string                                            `json:"deploymentId"`
	ID           string                                            `json:"id"`
	Info         GetDeploymentEvents200ApplicationJSON2PayloadInfo `json:"info"`
	Serial       string                                            `json:"serial"`
}

func (o *GetDeploymentEvents200ApplicationJSON2Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON2Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON2Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON2Payload) GetInfo() GetDeploymentEvents200ApplicationJSON2PayloadInfo {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON2PayloadInfo{}
	}
	return o.Info
}

func (o *GetDeploymentEvents200ApplicationJSON2Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

type GetDeploymentEvents200ApplicationJSON2Type string

const (
	GetDeploymentEvents200ApplicationJSON2TypeDeploymentState GetDeploymentEvents200ApplicationJSON2Type = "deployment-state"
)

func (e GetDeploymentEvents200ApplicationJSON2Type) ToPointer() *GetDeploymentEvents200ApplicationJSON2Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON2Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployment-state":
		*e = GetDeploymentEvents200ApplicationJSON2Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON2Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON2 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON2Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON2Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON2) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON2) GetPayload() GetDeploymentEvents200ApplicationJSON2Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON2Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON2) GetType() GetDeploymentEvents200ApplicationJSON2Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON2Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSON1Payload struct {
	Date         int64   `json:"date"`
	DeploymentID string  `json:"deploymentId"`
	ID           string  `json:"id"`
	Serial       string  `json:"serial"`
	Text         *string `json:"text,omitempty"`
}

func (o *GetDeploymentEvents200ApplicationJSON1Payload) GetDate() int64 {
	if o == nil {
		return 0
	}
	return o.Date
}

func (o *GetDeploymentEvents200ApplicationJSON1Payload) GetDeploymentID() string {
	if o == nil {
		return ""
	}
	return o.DeploymentID
}

func (o *GetDeploymentEvents200ApplicationJSON1Payload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetDeploymentEvents200ApplicationJSON1Payload) GetSerial() string {
	if o == nil {
		return ""
	}
	return o.Serial
}

func (o *GetDeploymentEvents200ApplicationJSON1Payload) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

type GetDeploymentEvents200ApplicationJSON1Type string

const (
	GetDeploymentEvents200ApplicationJSON1TypeCommand GetDeploymentEvents200ApplicationJSON1Type = "command"
)

func (e GetDeploymentEvents200ApplicationJSON1Type) ToPointer() *GetDeploymentEvents200ApplicationJSON1Type {
	return &e
}

func (e *GetDeploymentEvents200ApplicationJSON1Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "command":
		*e = GetDeploymentEvents200ApplicationJSON1Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentEvents200ApplicationJSON1Type: %v", v)
	}
}

type GetDeploymentEvents200ApplicationJSON1 struct {
	Created int64                                         `json:"created"`
	Payload GetDeploymentEvents200ApplicationJSON1Payload `json:"payload"`
	Type    GetDeploymentEvents200ApplicationJSON1Type    `json:"type"`
}

func (o *GetDeploymentEvents200ApplicationJSON1) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *GetDeploymentEvents200ApplicationJSON1) GetPayload() GetDeploymentEvents200ApplicationJSON1Payload {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON1Payload{}
	}
	return o.Payload
}

func (o *GetDeploymentEvents200ApplicationJSON1) GetType() GetDeploymentEvents200ApplicationJSON1Type {
	if o == nil {
		return GetDeploymentEvents200ApplicationJSON1Type("")
	}
	return o.Type
}

type GetDeploymentEvents200ApplicationJSONType string

const (
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON1 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_1"
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON2 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_2"
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON3 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_3"
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON4 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_4"
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON5 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_5"
	GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON6 GetDeploymentEvents200ApplicationJSONType = "getDeploymentEvents_200ApplicationJSON_6"
)

type GetDeploymentEvents200ApplicationJSON struct {
	GetDeploymentEvents200ApplicationJSON1 *GetDeploymentEvents200ApplicationJSON1
	GetDeploymentEvents200ApplicationJSON2 *GetDeploymentEvents200ApplicationJSON2
	GetDeploymentEvents200ApplicationJSON3 *GetDeploymentEvents200ApplicationJSON3
	GetDeploymentEvents200ApplicationJSON4 *GetDeploymentEvents200ApplicationJSON4
	GetDeploymentEvents200ApplicationJSON5 *GetDeploymentEvents200ApplicationJSON5
	GetDeploymentEvents200ApplicationJSON6 *GetDeploymentEvents200ApplicationJSON6

	Type GetDeploymentEvents200ApplicationJSONType
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON1(getDeploymentEvents200ApplicationJSON1 GetDeploymentEvents200ApplicationJSON1) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON1

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON1: &getDeploymentEvents200ApplicationJSON1,
		Type:                                   typ,
	}
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON2(getDeploymentEvents200ApplicationJSON2 GetDeploymentEvents200ApplicationJSON2) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON2

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON2: &getDeploymentEvents200ApplicationJSON2,
		Type:                                   typ,
	}
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON3(getDeploymentEvents200ApplicationJSON3 GetDeploymentEvents200ApplicationJSON3) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON3

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON3: &getDeploymentEvents200ApplicationJSON3,
		Type:                                   typ,
	}
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON4(getDeploymentEvents200ApplicationJSON4 GetDeploymentEvents200ApplicationJSON4) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON4

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON4: &getDeploymentEvents200ApplicationJSON4,
		Type:                                   typ,
	}
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON5(getDeploymentEvents200ApplicationJSON5 GetDeploymentEvents200ApplicationJSON5) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON5

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON5: &getDeploymentEvents200ApplicationJSON5,
		Type:                                   typ,
	}
}

func CreateGetDeploymentEvents200ApplicationJSONGetDeploymentEvents200ApplicationJSON6(getDeploymentEvents200ApplicationJSON6 GetDeploymentEvents200ApplicationJSON6) GetDeploymentEvents200ApplicationJSON {
	typ := GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON6

	return GetDeploymentEvents200ApplicationJSON{
		GetDeploymentEvents200ApplicationJSON6: &getDeploymentEvents200ApplicationJSON6,
		Type:                                   typ,
	}
}

func (u *GetDeploymentEvents200ApplicationJSON) UnmarshalJSON(data []byte) error {

	getDeploymentEvents200ApplicationJSON1 := new(GetDeploymentEvents200ApplicationJSON1)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON1, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON1 = getDeploymentEvents200ApplicationJSON1
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON1
		return nil
	}

	getDeploymentEvents200ApplicationJSON2 := new(GetDeploymentEvents200ApplicationJSON2)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON2, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON2 = getDeploymentEvents200ApplicationJSON2
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON2
		return nil
	}

	getDeploymentEvents200ApplicationJSON3 := new(GetDeploymentEvents200ApplicationJSON3)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON3, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON3 = getDeploymentEvents200ApplicationJSON3
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON3
		return nil
	}

	getDeploymentEvents200ApplicationJSON4 := new(GetDeploymentEvents200ApplicationJSON4)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON4, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON4 = getDeploymentEvents200ApplicationJSON4
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON4
		return nil
	}

	getDeploymentEvents200ApplicationJSON5 := new(GetDeploymentEvents200ApplicationJSON5)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON5, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON5 = getDeploymentEvents200ApplicationJSON5
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON5
		return nil
	}

	getDeploymentEvents200ApplicationJSON6 := new(GetDeploymentEvents200ApplicationJSON6)
	if err := utils.UnmarshalJSON(data, &getDeploymentEvents200ApplicationJSON6, "", true, true); err == nil {
		u.GetDeploymentEvents200ApplicationJSON6 = getDeploymentEvents200ApplicationJSON6
		u.Type = GetDeploymentEvents200ApplicationJSONTypeGetDeploymentEvents200ApplicationJSON6
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetDeploymentEvents200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.GetDeploymentEvents200ApplicationJSON1 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON1, "", true)
	}

	if u.GetDeploymentEvents200ApplicationJSON2 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON2, "", true)
	}

	if u.GetDeploymentEvents200ApplicationJSON3 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON3, "", true)
	}

	if u.GetDeploymentEvents200ApplicationJSON4 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON4, "", true)
	}

	if u.GetDeploymentEvents200ApplicationJSON5 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON5, "", true)
	}

	if u.GetDeploymentEvents200ApplicationJSON6 != nil {
		return utils.MarshalJSON(u.GetDeploymentEvents200ApplicationJSON6, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type GetDeploymentEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A stream of jsonlines where each line is a deployment log item.
	// Array of deployment logs for the provided query.
	GetDeploymentEvents200ApplicationJSONOneoves []GetDeploymentEvents200ApplicationJSON
	// A stream of jsonlines where each line is a deployment log item.
	// Array of deployment logs for the provided query.
	GetDeploymentEvents200ApplicationStreamPlusJSONOneOf *GetDeploymentEvents200ApplicationStreamPlusJSON
}

func (o *GetDeploymentEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetDeploymentEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetDeploymentEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetDeploymentEventsResponse) GetGetDeploymentEvents200ApplicationJSONOneoves() []GetDeploymentEvents200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetDeploymentEvents200ApplicationJSONOneoves
}

func (o *GetDeploymentEventsResponse) GetGetDeploymentEvents200ApplicationStreamPlusJSONOneOf() *GetDeploymentEvents200ApplicationStreamPlusJSON {
	if o == nil {
		return nil
	}
	return o.GetDeploymentEvents200ApplicationStreamPlusJSONOneOf
}
