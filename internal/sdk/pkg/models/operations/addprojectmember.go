// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
)

type AddProjectMemberRequestBodyType string

const ()

type AddProjectMemberRequestBody struct {
	Type AddProjectMemberRequestBodyType
}

func (u *AddProjectMemberRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	return errors.New("could not unmarshal into supported union types")
}

func (u AddProjectMemberRequestBody) MarshalJSON() ([]byte, error) {

	return nil, nil
}

type AddProjectMemberRequest struct {
	RequestBody *AddProjectMemberRequestBody `request:"mediaType=application/json"`
	// The ID or name of the Project.
	IDOrName string `pathParam:"style=simple,explode=false,name=idOrName"`
	// The Team identifier or slug to perform the request on behalf of.
	TeamID *string `queryParam:"style=form,explode=true,name=teamId"`
}

// AddProjectMember200ApplicationJSON - Responds with the project ID on success.
type AddProjectMember200ApplicationJSON struct {
	ID string `json:"id"`
}

type AddProjectMemberResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Responds with the project ID on success.
	AddProjectMember200ApplicationJSONObject *AddProjectMember200ApplicationJSON
}
